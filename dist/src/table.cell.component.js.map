{"version":3,"sources":["../../src/table.cell.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAiB,iBAAA,EAAmB,SAAA,EAAW,wBAAA,EAA0B,KAAA,EAAO,SAAA,EAAU,MAAO,eAAA,CAAgB;AAExH,OAAO,EAAE,eAAA,EAAgB,MAAO,eAAA,CAAgB;AAChD,OAAO,EAAE,6BAAA,EAA8B,MAAO,sCAAA,CAAuC;AAIrF;IAaE,iCAAoB,UAA2B,EAAU,wBAAkD,EAAU,GAAsB;QAAvH,eAAU,GAAV,UAAU,CAAiB;QAAU,6BAAwB,GAAxB,wBAAwB,CAA0B;QAAU,QAAG,GAAH,GAAG,CAAmB;IAAG,CAAC;IAE/I,iDAAe,GAAf;QACE,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAEO,8CAAY,GAApB,UAAqB,GAAW,EAAE,MAAmB;QACnD,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;IACnD,CAAC;IAEO,+CAAa,GAArB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;YAC1B,IAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;YAE1D,IAAM,gBAAgB,GAAG,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YAEtG,IAAM,gBAAgB,GAAG,IAAI,CAAC,0BAA0B,CAAC,gBAAgB,CAAC;YAC1E,gBAAgB,CAAC,KAAK,EAAE,CAAC;YAEzB,IAAM,YAAY,GAAG,gBAAgB,CAAC,eAAe,CAAC,gBAAgB,CAAC,CAAC;YACjD,YAAY,CAAC,QAAS,CAAC,IAAI,GAAG,QAAQ,CAAC;YACvC,YAAY,CAAC,QAAS,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QAC/D,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QACtE,CAAC;QAED,qCAAqC;QACrC,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;IAC3B,CAAC;IACI,kCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,kBAAkB;oBAC5B,QAAQ,EAAE,4PAQT;iBACF,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,sCAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,eAAe,GAAG;QACzB,EAAC,IAAI,EAAE,wBAAwB,GAAG;QAClC,EAAC,IAAI,EAAE,iBAAiB,GAAG;KAC1B,EAJ6F,CAI7F,CAAC;IACK,sCAAc,GAA2C;QAChE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC5B,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QACzB,4BAA4B,EAAE,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,6BAA6B,EAAG,EAAE,EAAE;KAC5F,CAAC;IACF,8BAAC;CAnED,AAmEC,IAAA;SAnEY,uBAAuB","file":"table.cell.component.js","sourceRoot":"","sourcesContent":["import { AfterViewInit, ChangeDetectorRef, Component, ComponentFactoryResolver, Input, ViewChild } from '@angular/core';\r\nimport { SharkColumn } from './column';\r\nimport { SharkTableUtils } from './table.utils';\r\nimport { SharkDynamicContentsDirective } from './dynamic/dynamic.contents.directive';\r\nimport { SharkDynamicContents } from './dynamic/dynamic.contents';\r\n\r\n\r\nexport class SharkTableCellComponent implements AfterViewInit {\r\n\r\n  \r\n  column: SharkColumn;\r\n\r\n  \r\n  row: any;\r\n\r\n  \r\n  tableCellContentsDirective: SharkDynamicContentsDirective;\r\n\r\n  noComponentContents: any;\r\n\r\n  constructor(private tableUtils: SharkTableUtils, private componentFactoryResolver: ComponentFactoryResolver, private cdr: ChangeDetectorRef) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    this.loadComponent();\r\n  }\r\n\r\n  private retrieveCell(row: Object, column: SharkColumn): string {\r\n    return this.tableUtils.retrieveCell(row, column);\r\n  }\r\n\r\n  private loadComponent(): void {\r\n    if (this.column.component) {\r\n      const contents = this.retrieveCell(this.row, this.column);\r\n\r\n      const componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.column.component);\r\n\r\n      const viewContainerRef = this.tableCellContentsDirective.viewContainerRef;\r\n      viewContainerRef.clear();\r\n\r\n      const componentRef = viewContainerRef.createComponent(componentFactory);\r\n      (<SharkDynamicContents>componentRef.instance).data = contents;\r\n      (<SharkDynamicContents>componentRef.instance).row = this.row;\r\n    } else {\r\n      this.noComponentContents = this.retrieveCell(this.row, this.column);\r\n    }\r\n\r\n    // without this, everything went boom\r\n    this.cdr.detectChanges();\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  selector: 'shark-table-cell',\r\n  template: `\r\n      <ng-container *ngIf=\"column.component\">\r\n          <ng-template sharkDynamicContents></ng-template>\r\n      </ng-container>\r\n\r\n      <ng-container *ngIf=\"noComponentContents\">\r\n          {{ noComponentContents }}\r\n      </ng-container>\r\n  `\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SharkTableUtils, },\n{type: ComponentFactoryResolver, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'column': [{ type: Input },],\n'row': [{ type: Input },],\n'tableCellContentsDirective': [{ type: ViewChild, args: [SharkDynamicContentsDirective, ] },],\n};\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}