[{"__symbolic":"module","version":3,"metadata":{"SharkTableHeaderComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"[shark-table-header]","template":"\n        <tr class=\"header-row header-border\" *ngIf=\"columns.length > 0\">\n            <th id=\"childHeader\" *ngIf=\"childRows\" class=\"child-spacer\">\n              <span class=\"screen-reader\">Details</span>\n            </th>\n            <th class=\"header-buttons\" [ngClass]=\"{'right': column.alignRight }\" scope=\"col\"\n                *ngFor=\"let column of columns; let i = index; let f = first; let l = last;\"\n                [attr.id]=\"column.property\"\n                [attr.aria-sort]=\"(!sortable || column.unsortable) ? null : (!column.sortType || column.sortType === 0) ? 'none' : column.sortType === 1 ? 'ascending' : 'descending'\">\n                <button *ngIf=\"columnOrdering && !f\" (click)=\"moveColumnBackward(i, column)\" type=\"button\" class=\"ordering-button fa fa-angle-left\" [id]=\"column.property + '-left'\">\n                  <span class=\"screen-reader-button-label\">{{ 'Move the ' + column.header + ' column left' }}</span>\n                </button>\n                <shark-table-header-button *ngIf=\"sortable && !column.unsortable\" [column]=\"column\" (sortChange)=\"dispatchSortChangeEvent($event)\"></shark-table-header-button>\n                <ng-container *ngIf=\"!sortable || column.unsortable\">\n                  {{ column.header }}\n                </ng-container>\n                <button *ngIf=\"columnOrdering && !l\" (click)=\"moveColumnForward(i, column)\" type=\"button\" class=\"ordering-button fa fa-angle-right\" [id]=\"column.property + '-right'\">\n                  <span class=\"screen-reader-button-label\">{{ 'Move the ' + column.header + ' column right' }}</span>\n                </button>\n                <div *ngIf=\"columnFiltering && filterable\">\n                  <label [for]=\"'column-' + i\" class=\"screen-reader\">{{ column.header }} filter</label>\n                  <input type=\"text\" name=\"column{{i}}\" [id]=\"'column-' + i\" [(ngModel)]=\"column.filter\" (ngModelChange)=\"fireFilterChange()\" [attr.placeholder]=\"showFilterPlaceholders ? (column.header + ' filter') : null\" />\n                </div>\n            </th>\n        </tr>\n    "}]}],"members":{"sortable":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"columns":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"columnOrdering":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"childRows":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"page":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"filterable":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"columnFiltering":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"filter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"showFilterPlaceholders":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"notifierService":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"localPagingSize":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"sortChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"filterChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"columnChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject"},"arguments":[{"__symbolic":"reference","module":"@angular/common","name":"DOCUMENT"}]}]],"parameters":[{"__symbolic":"reference","name":"any"}]}],"dispatchSortChangeEvent":[{"__symbolic":"method"}],"fireFilterChange":[{"__symbolic":"method"}],"moveColumnForward":[{"__symbolic":"method"}],"moveColumnBackward":[{"__symbolic":"method"}],"focusButton":[{"__symbolic":"method"}],"move":[{"__symbolic":"method"}]}},"SharkHeaderFilterChange":{"__symbolic":"interface"}}},{"__symbolic":"module","version":1,"metadata":{"SharkTableHeaderComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"[shark-table-header]","template":"\n        <tr class=\"header-row header-border\" *ngIf=\"columns.length > 0\">\n            <th id=\"childHeader\" *ngIf=\"childRows\" class=\"child-spacer\">\n              <span class=\"screen-reader\">Details</span>\n            </th>\n            <th class=\"header-buttons\" [ngClass]=\"{'right': column.alignRight }\" scope=\"col\"\n                *ngFor=\"let column of columns; let i = index; let f = first; let l = last;\"\n                [attr.id]=\"column.property\"\n                [attr.aria-sort]=\"(!sortable || column.unsortable) ? null : (!column.sortType || column.sortType === 0) ? 'none' : column.sortType === 1 ? 'ascending' : 'descending'\">\n                <button *ngIf=\"columnOrdering && !f\" (click)=\"moveColumnBackward(i, column)\" type=\"button\" class=\"ordering-button fa fa-angle-left\" [id]=\"column.property + '-left'\">\n                  <span class=\"screen-reader-button-label\">{{ 'Move the ' + column.header + ' column left' }}</span>\n                </button>\n                <shark-table-header-button *ngIf=\"sortable && !column.unsortable\" [column]=\"column\" (sortChange)=\"dispatchSortChangeEvent($event)\"></shark-table-header-button>\n                <ng-container *ngIf=\"!sortable || column.unsortable\">\n                  {{ column.header }}\n                </ng-container>\n                <button *ngIf=\"columnOrdering && !l\" (click)=\"moveColumnForward(i, column)\" type=\"button\" class=\"ordering-button fa fa-angle-right\" [id]=\"column.property + '-right'\">\n                  <span class=\"screen-reader-button-label\">{{ 'Move the ' + column.header + ' column right' }}</span>\n                </button>\n                <div *ngIf=\"columnFiltering && filterable\">\n                  <label [for]=\"'column-' + i\" class=\"screen-reader\">{{ column.header }} filter</label>\n                  <input type=\"text\" name=\"column{{i}}\" [id]=\"'column-' + i\" [(ngModel)]=\"column.filter\" (ngModelChange)=\"fireFilterChange()\" [attr.placeholder]=\"showFilterPlaceholders ? (column.header + ' filter') : null\" />\n                </div>\n            </th>\n        </tr>\n    "}]}],"members":{"sortable":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"columns":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"columnOrdering":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"childRows":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"page":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"filterable":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"columnFiltering":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"filter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"showFilterPlaceholders":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"notifierService":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"localPagingSize":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"sortChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"filterChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"columnChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject"},"arguments":[{"__symbolic":"reference","module":"@angular/common","name":"DOCUMENT"}]}]],"parameters":[{"__symbolic":"reference","name":"any"}]}],"dispatchSortChangeEvent":[{"__symbolic":"method"}],"fireFilterChange":[{"__symbolic":"method"}],"moveColumnForward":[{"__symbolic":"method"}],"moveColumnBackward":[{"__symbolic":"method"}],"focusButton":[{"__symbolic":"method"}],"move":[{"__symbolic":"method"}]}},"SharkHeaderFilterChange":{"__symbolic":"interface"}}}]