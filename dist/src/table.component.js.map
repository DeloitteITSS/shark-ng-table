{"version":3,"sources":["../../src/table.component.ts"],"names":[],"mappings":"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","file":"table.component.js","sourceRoot":"","sourcesContent":["import {\r\n  Component, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges, Type,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\nimport { Page, Sort } from './page';\r\nimport { SharkColumn } from './column';\r\nimport { SharkPageChangeEvent } from './page.change.event';\r\nimport { SharkCurrentSort, SharkSortType } from './sort.type';\r\nimport { SharkTableUtils } from './table.utils';\r\nimport { SharkDynamicContents } from './dynamic/dynamic.contents';\r\nimport { SharkHeaderFilterChange, SharkTableHeaderComponent } from './table.header.component';\r\nimport { CellStyleFunction, RowStyleFunction } from './table.body.component';\r\nimport { SharkTableFooterComponent } from './table.footer.component';\r\nimport { SharkTableInfoHeaderComponent } from './table.info.header.component';\r\nimport { NotifierService } from './notifier/notifier.service';\r\nimport { SharkTableCurrentDataEvent } from './current.data.event';\r\n\r\n\r\nexport class SharkTableComponent implements OnInit, OnChanges, OnDestroy {\r\n\r\n  \r\n  headerInfoComponent: SharkTableInfoHeaderComponent;\r\n\r\n  \r\n  headerComponent: SharkTableHeaderComponent;\r\n\r\n  \r\n  footerComponent: SharkTableFooterComponent;\r\n\r\n  notifierService = new NotifierService();\r\n\r\n  /**\r\n   * The raw table data\r\n   */\r\n  \r\n  data: Page | Observable<Page | any[]> | any[];\r\n\r\n  /**\r\n   * The table column definitions\r\n   */\r\n  \r\n  columns: SharkColumn[];\r\n\r\n  currentColumns: SharkColumn[] = [];\r\n\r\n  /**\r\n   * The <caption> text for this table\r\n   * @type {string}\r\n   */\r\n  \r\n  caption = 'A Data Table';\r\n\r\n  /**\r\n   * Whether or not the table <caption> should be hidden (screen-reader) only.\r\n   * @type {boolean}\r\n   */\r\n  \r\n  hideCaption = false;\r\n\r\n  /**\r\n   * Allow users to turn columns on and off\r\n   * @type {boolean}\r\n   */\r\n  \r\n  columnPicker = false;\r\n\r\n  /**\r\n   * Allow users to reorder columns with header buttons\r\n   * @type {boolean}\r\n   */\r\n  \r\n  columnOrdering = false;\r\n\r\n  /**\r\n   * The destination page for the call to `router.navigate` when the row is clicked.\r\n   */\r\n  \r\n  linkTarget: string;\r\n\r\n  /**\r\n   * The property name from the data object to pass to `router.navigate` when the rows is clicked.\r\n   */\r\n  \r\n  linkKey: string;\r\n\r\n  /**\r\n   * Enables the sorting headers\r\n   * @type {boolean}\r\n   */\r\n  \r\n  sortable = true;\r\n\r\n  /**\r\n   * Enables the global filter text box\r\n   * @type {boolean}\r\n   */\r\n  \r\n  filterable = true;\r\n\r\n  /**\r\n   * Enables column specific filter boxes\r\n   * @type {boolean}\r\n   */\r\n  \r\n  columnFiltering = false;\r\n\r\n  /**\r\n   * Enables client-side filtering as opposed to just emitting a `SharkPageChangeEvent`\r\n   * @type {boolean}\r\n   */\r\n  \r\n  localFilter = true;\r\n\r\n  /**\r\n   * Enables the placeholder text for the filter boxes\r\n   * @type {boolean}\r\n   */\r\n  \r\n  showFilterPlaceholders = true;\r\n\r\n  /**\r\n   * Enables client-side pagination as opposed to just emitting a `SharkPageChangeEvent`\r\n   * @type {boolean}\r\n   */\r\n  \r\n  localPaging = true;\r\n\r\n  /**\r\n   * The size of each page\r\n   * @type {number}\r\n   */\r\n  \r\n  localPagingSize: number = 10;\r\n\r\n  /**\r\n   * The supported page sizes\r\n   * @type {number[]}\r\n   */\r\n  \r\n  localPagingOptions: number[] = [ 10, 20, 100 ];\r\n\r\n  /**\r\n   * Enables the drop down for changing the page size\r\n   * @type {boolean}\r\n   */\r\n  \r\n  showLocalPagingOptions = true;\r\n\r\n  /**\r\n   * Shows a button that when clicked, emits a `SharkPageChangeEvent`\r\n   * @type {boolean}\r\n   */\r\n  \r\n  serverSideData = false;\r\n\r\n  /**\r\n   * The initial sortString\r\n   */\r\n  \r\n  initialSort: string;\r\n\r\n  \r\n  rowStylingFunction: RowStyleFunction = row => { return {}; };\r\n\r\n  \r\n  cellStylingFunction: CellStyleFunction;\r\n\r\n  /**\r\n   * Enables children rows\r\n   * @type {boolean}\r\n   */\r\n  \r\n  childRows = false;\r\n\r\n  /**\r\n   * Your custom component which extends {@link SharkDynamicContents} that will be used\r\n   * to render each child row. Your custom component needs to be registered in your NgModule\r\n   * as an `entryComponent` and in the `declarations` section.\r\n   *\r\n   * The easiest way to specify this component in your HTML template is to create an instance variable\r\n   * and assign it, eg:\r\n   *\r\n   * ```typescript\r\n   * @Component({\r\n   *    template: `\r\n   *      <shark-table\r\n   *          [data]=\"testData\"\r\n   *          [columns]=\"tableColumns\"\r\n   *          [childRows]=\"true\"\r\n   *          [childComponent]=\"childComponent\"\r\n   *      >\r\n   *      </shark-table>\r\n   *    `\r\n   * })\r\n   * export class MyComponent {\r\n   *    childComponent = MyChildComponent\r\n   * }\r\n   *\r\n   * ```\r\n   */\r\n  \r\n  childComponent?: Type<SharkDynamicContents>;\r\n\r\n  /**\r\n   * {@link SharkPageChangeEvent} events are emitted from here\r\n   * @type {EventEmitter<SharkPageChangeEvent>}\r\n   */\r\n  \r\n  pageChange = new EventEmitter<SharkPageChangeEvent>();\r\n\r\n  /**\r\n   * The current filter value\r\n   */\r\n  \r\n  filter: string;\r\n\r\n  /**\r\n   * Show the footer with 'Showing x through y of z rows`\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  \r\n  footer = true;\r\n\r\n  /**\r\n   * Message to show when the table is empty\r\n   */\r\n  \r\n  tableEmptyMessage = 'This table contains no rows';\r\n\r\n  page: Page;\r\n\r\n  private dataSubscription: Subscription;\r\n\r\n  private localSubscription: Subscription;\r\n\r\n  constructor(private router: Router, private tableUtils: SharkTableUtils) {}\r\n\r\n  ngOnInit(): void {\r\n    this.updatePage();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    const dataChange = changes['data'];\r\n    const columnChange = changes['columns'];\r\n\r\n    if (columnChange && columnChange.isFirstChange()) {\r\n      this.columns = columnChange.currentValue;\r\n      this.columns.forEach((column: SharkColumn) => column.displayed = true);\r\n      this.currentColumns = this.columns;\r\n    }\r\n\r\n    if (dataChange && !dataChange.isFirstChange()) {\r\n      this.updatePage();\r\n    } else if (columnChange && !columnChange.isFirstChange()) {\r\n      this.currentColumns = columnChange.currentValue;\r\n      this.emitCurrent();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.dataSubscription) {\r\n      this.dataSubscription.unsubscribe();\r\n    }\r\n\r\n    if (this.localSubscription) {\r\n      this.localSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  updateCurrentColumns(newColumns: SharkColumn[]) {\r\n    this.currentColumns = newColumns.filter((value: SharkColumn) => value.displayed);\r\n    this.emitCurrent();\r\n  }\r\n\r\n  /**\r\n   * Emits a {@link SharkPageChangeEvent} with the current information. This event should be consumed by the host\r\n   * component and sent to a REST endpoint to update the data.\r\n   */\r\n  emitCurrent(): void {\r\n    this.pageChange.emit({\r\n      pageNo: this.page.number,\r\n      columns: this.currentColumns,\r\n      sortString: this.generateSortString(),\r\n      sorts: this.generateSortArray(),\r\n      filter: this.filter\r\n    });\r\n  }\r\n\r\n  headerChange(event: SharkHeaderFilterChange): void {\r\n    this.columns = event.columns;\r\n    this.currentColumns = this.columns.filter((value: SharkColumn) => value.displayed);\r\n\r\n    this.filter = event.filter;\r\n    this.localPagingSize = event.localPagingSize;\r\n\r\n    this.emitCurrent();\r\n  }\r\n\r\n  changePage(pageNo: number): void {\r\n    this.pageChange.emit({\r\n      pageNo: pageNo,\r\n      columns: this.currentColumns,\r\n      sortString: this.generateSortString(),\r\n      sorts: this.generateSortArray(),\r\n      filter: this.filter\r\n    });\r\n  }\r\n\r\n  changeSort(columnProperty: string, sortType: SharkSortType): void {\r\n    if (this.sortable) {\r\n      this.currentColumns.forEach((column: SharkColumn) => {\r\n\r\n        if (column.property === columnProperty) {\r\n          // State Machine\r\n          // ASC -> DESC -> NONE -> ASC\r\n          switch (sortType) {\r\n            case SharkSortType.ASC: {\r\n              // -> DESC\r\n              column.sortType = SharkSortType.DESC;\r\n              break;\r\n            }\r\n            case SharkSortType.DESC: {\r\n              // -> NONE\r\n              column.sortType = SharkSortType.NONE;\r\n              break;\r\n            }\r\n            case SharkSortType.NONE:\r\n            default: {\r\n              // -> ASC\r\n              column.sortType = SharkSortType.ASC;\r\n              break;\r\n            }\r\n          }\r\n\r\n          this.notifierService.postMessage((column.sortType === SharkSortType.DESC ? 'sorted descending' : column.sortType === SharkSortType.ASC ? 'sorted ascending' : 'unsorted'));\r\n        }\r\n      });\r\n\r\n      const sorts = this.generateSortArray();\r\n\r\n      if (!this.serverSideData) {\r\n        // sort internally\r\n        this.sort(this.page.content, sorts);\r\n      }\r\n\r\n      this.pageChange.emit({\r\n        pageNo: this.page.number,\r\n        columns: this.currentColumns,\r\n        sortString: this.generateSortString(),\r\n        sorts: sorts,\r\n        filter: this.filter\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Currently only works if your input is an any[], returns the current \"view\" into the table with filtering/column selection\r\n   * @param {boolean} rendered If you would like inline pipes to be applied to the exported data\r\n   *\r\n   * @returns {SharkTableCurrentDataEvent}\r\n   */\r\n  exportCurrentData(rendered: boolean = true): SharkTableCurrentDataEvent {\r\n    let currentData: any[];\r\n    if (this.localFilter && (this.columnFiltering && this.tableUtils.hasFilter(this.currentColumns) || (this.filter && this.filter.length > 0))) {\r\n      currentData = this.tableUtils.filter(this.data, this.currentColumns, this.columnFiltering, this.filter);\r\n      this.sort(currentData, this.generateSortArray());\r\n    } else {\r\n      currentData = this.data as any[];\r\n    }\r\n\r\n    if (this.currentColumns.length === 0) {\r\n      return {\r\n        data: [],\r\n        columns: []\r\n      }\r\n    }\r\n\r\n    return {\r\n      data: currentData.map(row => this.tableUtils.exportRow(row, this.currentColumns, rendered)),\r\n      columns: this.currentColumns\r\n    };\r\n  }\r\n\r\n  private generateSortString(): string {\r\n    let sortString = '';\r\n\r\n    this.currentColumns.forEach((column: SharkColumn) => {\r\n      switch (column.sortType) {\r\n        case SharkSortType.ASC: {\r\n          sortString += '' + column.property + ';';\r\n          break;\r\n        }\r\n        case SharkSortType.DESC: {\r\n          sortString += '-' + column.property + ';';\r\n          break;\r\n        }\r\n        case SharkSortType.NONE: {\r\n          break;\r\n        }\r\n      }\r\n    });\r\n\r\n    return sortString;\r\n  }\r\n\r\n  private generateSortArray(): SharkCurrentSort[] {\r\n    const currentSorts: SharkCurrentSort[] = [];\r\n\r\n    this.currentColumns.forEach((column: SharkColumn) => {\r\n      switch (column.sortType) {\r\n        case SharkSortType.ASC:\r\n        case SharkSortType.DESC: {\r\n          currentSorts.push({property: column.property, sortType: column.sortType});\r\n          break;\r\n        }\r\n      }\r\n    });\r\n\r\n    return currentSorts;\r\n  }\r\n\r\n  private sort(content: any[], sorts: SharkCurrentSort[]): void {\r\n    const columnCache = {};\r\n    this.columns.forEach(column => columnCache[column.property] = column);\r\n\r\n    content.sort((a, b) => {\r\n      let result = 0;\r\n\r\n      sorts.forEach((sort: SharkCurrentSort) => {\r\n        if ( result === 0 ) {\r\n          const aVal = this.tableUtils.findValue(a, sort.property);\r\n          const bVal = this.tableUtils.findValue(b, sort.property);\r\n\r\n          const sortFunction = columnCache[sort.property].ascendingSortFunction;\r\n          if (!!sortFunction) {\r\n            result = sortFunction(aVal, bVal);\r\n          } else if (!isNaN(Number(aVal)) && !isNaN(Number(bVal))) {\r\n            result = aVal - bVal;\r\n          } else {\r\n            result = (aVal < bVal) ? -1 : (aVal > bVal) ? 1 : 0;\r\n          }\r\n\r\n          result *= (sort.sortType === SharkSortType.DESC) ? -1 : 1;\r\n        }\r\n      });\r\n\r\n      return result;\r\n    });\r\n  }\r\n\r\n  private updatePage(): void {\r\n    if (this.data) {\r\n\r\n      if (this.data.constructor === Array) {\r\n        this.setupPageArray();\r\n      } else if (this.data.constructor === Observable) {\r\n        this.setupPageSubscription();\r\n      } else {\r\n        this.page = this.data as Page;\r\n\r\n        if (!this.page.number) {\r\n          this.page.number = 0;\r\n        }\r\n      }\r\n\r\n      this.setupInitialSort();\r\n    }\r\n  }\r\n\r\n  private createLocalPage(data?: any[]): Page {\r\n    const total = (data ? data : this.data as any[]).length;\r\n\r\n    return {\r\n      number: 0,\r\n      totalPages: 1,\r\n      totalElements: total,\r\n      first: true,\r\n      last: true,\r\n      numberOfElements: total,\r\n      content: data ? data : this.data as any[]\r\n    };\r\n  }\r\n\r\n  private setupPageArray(): void {\r\n    if (this.localPaging) {\r\n        const total = (this.data as any[]).length;\r\n        const pageCount = Math.ceil(total / this.localPagingSize);\r\n\r\n        this.page = {\r\n          number: 0,\r\n          totalPages: pageCount,\r\n          totalElements: total,\r\n          first: true,\r\n          last: false,\r\n          numberOfElements: this.localPagingSize,\r\n          content: (this.data as any[]).slice(0, this.localPagingSize)\r\n        };\r\n\r\n        if (this.localSubscription) {\r\n          this.localSubscription.unsubscribe();\r\n        }\r\n\r\n        this.localSubscription = this.pageChange.subscribe((event) => this.calculateLocalPage(event));\r\n    } else if (this.localFilter) {\r\n      this.page = this.createLocalPage();\r\n\r\n      if (this.localSubscription) {\r\n        this.localSubscription.unsubscribe();\r\n      }\r\n\r\n      this.localSubscription = this.pageChange.subscribe((event) => this.calculateLocalPageNoPagination(event));\r\n    } else {\r\n      this.page = this.createLocalPage();\r\n    }\r\n  }\r\n\r\n  private calculateLocalPageNoPagination(event: SharkPageChangeEvent): void {\r\n    if (((event.filter && event.filter.length > 0)) || this.tableUtils.hasFilter(event.columns)) {\r\n      const filteredContent = this.tableUtils.filter(this.data, this.currentColumns, this.columnFiltering, event.filter);\r\n\r\n      this.page = {\r\n        number: 0,\r\n        totalPages: 1,\r\n        totalElements: filteredContent.length,\r\n        first: true,\r\n        last: false,\r\n        numberOfElements: filteredContent.length,\r\n        content: filteredContent\r\n      };\r\n    } else {\r\n      this.page = this.createLocalPage();\r\n    }\r\n  }\r\n\r\n  private calculateLocalPage(event: SharkPageChangeEvent): void {\r\n      let content;\r\n\r\n      if (this.localFilter && ((event.filter && event.filter.length > 0)) || this.tableUtils.hasFilter(event.columns)) {\r\n        content = this.tableUtils.filter(this.data, this.currentColumns, this.columnFiltering, event.filter);\r\n      } else {\r\n        content = (this.data as any[]);\r\n      }\r\n\r\n      this.sort(content, this.generateSortArray());\r\n      const total = content.length;\r\n      // IntelliJ claims this * 1 call is useless, but we need to make sure it's a number\r\n      const pageSize: number = (this.localPagingSize > content.length ? content.length : this.localPagingSize) * 1;\r\n      const pageCount = total === 0 ? 0 : Math.ceil(total / pageSize);\r\n      const pageNo = event.pageNo > pageCount || content.length <= pageSize ? 0 : event.pageNo;\r\n      const sliceRange = pageSize * pageNo + pageSize;\r\n      const displayedContent = content.slice((pageSize * pageNo), sliceRange);\r\n\r\n      this.page = {\r\n        number: pageNo,\r\n        totalPages: pageCount,\r\n        totalElements: total,\r\n        first: pageNo === 0,\r\n        last: pageNo === pageCount,\r\n        numberOfElements: pageSize,\r\n        content: displayedContent\r\n      };\r\n  }\r\n\r\n  private setupPageSubscription(): void {\r\n    // Fix potential memory leak, by unsubscribing to previous subscription if exists\r\n    if (this.dataSubscription) {\r\n      this.dataSubscription.unsubscribe();\r\n    }\r\n\r\n    this.dataSubscription = (this.data as Observable<Page | any[]>).subscribe((data: Page | any[]) => {\r\n      if (data.constructor === Array) {\r\n        this.page = this.createLocalPage(data as any[]);\r\n      } else {\r\n        this.page = data as Page;\r\n      }\r\n    });\r\n  }\r\n\r\n  private setupInitialSort() {\r\n\r\n    if (this.initialSort) {\r\n      const sorts = this.initialSort.split(';');\r\n\r\n      sorts.forEach((sort: string) => {\r\n        this.columns.forEach((column: SharkColumn) => {\r\n          let type = SharkSortType.NONE;\r\n          let property = sort;\r\n\r\n          if (sort.startsWith('-')) {\r\n            type = SharkSortType.DESC;\r\n            property = property.substr(1);\r\n          } else {\r\n            type = SharkSortType.ASC;\r\n          }\r\n\r\n          if (property === column.property) {\r\n            column.sortType = type;\r\n          }\r\n        });\r\n      });\r\n\r\n      this.changeSort('', undefined);\r\n    }\r\n\r\n    if (this.page.sorts && this.page.sorts.length > 0) {\r\n      this.columns.forEach((column: SharkColumn) => {\r\n\r\n        this.page.sorts.forEach((sort: Sort) => {\r\n          if (column.property === sort.property) {\r\n            column.sortType = SharkSortType.NONE;\r\n\r\n            if (sort.ascending) {\r\n              column.sortType = SharkSortType.ASC;\r\n            } else if (sort.descending) {\r\n              column.sortType = SharkSortType.DESC;\r\n            }\r\n          }\r\n        });\r\n      });\r\n\r\n      if (!this.serverSideData) {\r\n        this.changeSort('', undefined);\r\n      }\r\n    }\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  selector: 'shark-table',\r\n  template: `\r\n      <shark-table-aria-notifier [notifierService]=\"notifierService\"></shark-table-aria-notifier>\r\n      <div class=\"table-wrapper\" *ngIf=\"page\">\r\n        <shark-table-info-header *ngIf=\"(serverSideData || (filterable && !columnFiltering) || columnPicker)\"\r\n                                 [serverSideData]=\"serverSideData\"\r\n                                 [filterable]=\"filterable\"\r\n                                 [columnFiltering]=\"columnFiltering\"\r\n                                 [columnPicker]=\"columnPicker\"\r\n                                 [columns]=\"currentColumns\"\r\n                                 [allColumns]=\"columns\"\r\n                                 [filter]=\"filter\"\r\n                                 [showFilterPlaceholders]=\"showFilterPlaceholders\"\r\n                                 [localPagingSize]=\"localPagingSize\"\r\n                                 [notifierService]=\"notifierService\"\r\n                                 (filterChange)=\"headerChange($event)\"\r\n                                 (columnChange)=\"updateCurrentColumns($event)\"\r\n        ></shark-table-info-header>\r\n        <table>\r\n            <caption [ngClass]=\"{'screen-reader': hideCaption}\">{{ caption }}</caption>\r\n            <thead shark-table-header\r\n                   [sortable]=\"sortable\"\r\n                   [columns]=\"currentColumns\"\r\n                   [columnOrdering]=\"columnOrdering\"\r\n                   [childRows]=\"childRows\"\r\n                   [page]=\"page\"\r\n                   [filterable]=\"filterable\"\r\n                   [columnFiltering]=\"columnFiltering\"\r\n                   [localPagingSize]=\"localPagingSize\"\r\n                   [filter]=\"filter\"\r\n                   [showFilterPlaceholders]=\"showFilterPlaceholders\"\r\n                   [notifierService]=\"notifierService\"\r\n                   (sortChange)=\"changeSort($event.property, $event.sortType)\"\r\n                   (filterChange)=\"headerChange($event)\"\r\n                   (columnChange)=\"updateCurrentColumns($event)\"\r\n            ></thead>\r\n            <tbody shark-table-body\r\n                   [currentColumns]=\"currentColumns\"\r\n                   [columns]=\"columns\"\r\n                   [localFilter]=\"localFilter\"\r\n                   [localPaging]=\"localPaging\"\r\n                   [columnFiltering]=\"columnFiltering\"\r\n                   [filter]=\"filter\"\r\n                   [childRows]=\"childRows\"\r\n                   [childComponent]=\"childComponent\"\r\n                   [linkTarget]=\"linkTarget\" [linkKey]=\"linkKey\"\r\n                   [page]=\"page\"\r\n                   [tableEmptyMessage]=\"tableEmptyMessage\"\r\n                   [rowStylingFunction]=\"rowStylingFunction\"\r\n                   [cellStylingFunction]=\"cellStylingFunction\"\r\n            ></tbody>\r\n        </table>\r\n        <shark-table-footer *ngIf=\"footer && currentColumns.length > 0\"\r\n                            [page]=\"page\"\r\n                            [columns]=\"currentColumns\"\r\n                            [filter]=\"filter\"\r\n                            [localPaging]=\"localPaging\"\r\n                            [localPagingSize]=\"localPagingSize\"\r\n                            [localPagingOptions]=\"localPagingOptions\"\r\n                            [showLocalPagingOptions]=\"showLocalPagingOptions\"\r\n                            [notifierService]=\"notifierService\"\r\n                            (filterChange)=\"headerChange($event)\"\r\n                            (paginationChange)=\"changePage($event)\"\r\n        ></shark-table-footer>\r\n      </div>\r\n  `\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Router, },\n{type: SharkTableUtils, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'headerInfoComponent': [{ type: ViewChild, args: [SharkTableInfoHeaderComponent, ] },],\n'headerComponent': [{ type: ViewChild, args: [SharkTableHeaderComponent, ] },],\n'footerComponent': [{ type: ViewChild, args: [SharkTableFooterComponent, ] },],\n'data': [{ type: Input },],\n'columns': [{ type: Input },],\n'caption': [{ type: Input },],\n'hideCaption': [{ type: Input },],\n'columnPicker': [{ type: Input },],\n'columnOrdering': [{ type: Input },],\n'linkTarget': [{ type: Input },],\n'linkKey': [{ type: Input },],\n'sortable': [{ type: Input },],\n'filterable': [{ type: Input },],\n'columnFiltering': [{ type: Input },],\n'localFilter': [{ type: Input },],\n'showFilterPlaceholders': [{ type: Input },],\n'localPaging': [{ type: Input },],\n'localPagingSize': [{ type: Input },],\n'localPagingOptions': [{ type: Input },],\n'showLocalPagingOptions': [{ type: Input },],\n'serverSideData': [{ type: Input },],\n'initialSort': [{ type: Input },],\n'rowStylingFunction': [{ type: Input },],\n'cellStylingFunction': [{ type: Input },],\n'childRows': [{ type: Input },],\n'childComponent': [{ type: Input },],\n'pageChange': [{ type: Output },],\n'filter': [{ type: Input },],\n'footer': [{ type: Input },],\n'tableEmptyMessage': [{ type: Input },],\n};\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}