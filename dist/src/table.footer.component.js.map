{"version":3,"sources":["../../src/table.footer.component.ts"],"names":[],"mappings":"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","file":"table.footer.component.js","sourceRoot":"","sourcesContent":["import { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges, ViewChild } from '@angular/core';\r\nimport { Page } from './page';\r\nimport { SharkColumn } from './column';\r\nimport { SharkTableUtils } from './table.utils';\r\nimport { SharkHeaderFilterChange } from './table.header.component';\r\nimport { SharkTablePaginationComponent } from './table.pagination.component';\r\nimport { NotifierService } from './notifier/notifier.service';\r\n\r\n\r\nexport class SharkTableFooterComponent implements OnChanges {\r\n\r\n  start = 0;\r\n  end = 0;\r\n  total = 0;\r\n  filtered = false;\r\n\r\n  currentPageInfo = '';\r\n\r\n  \r\n  paginationComponent: SharkTablePaginationComponent;\r\n\r\n  \r\n  notifierService: NotifierService;\r\n\r\n  \r\n  localPaging: boolean;\r\n\r\n  \r\n  localPagingSize: number;\r\n\r\n  \r\n  localPagingOptions: number[];\r\n\r\n  \r\n  showLocalPagingOptions: boolean;\r\n\r\n  /**\r\n   * The current {@link Page}\r\n   */\r\n  \r\n  page: Page;\r\n\r\n  /**\r\n   * The current {@link SharkColumn}[]\r\n   */\r\n  \r\n  columns: SharkColumn[];\r\n\r\n  /**\r\n   * The current filter string\r\n   */\r\n  \r\n  filter: string;\r\n\r\n  \r\n  filterChange = new EventEmitter<SharkHeaderFilterChange>();\r\n\r\n  \r\n  paginationChange = new EventEmitter<number>();\r\n\r\n  constructor(private tableUtils: SharkTableUtils) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.total = this.page.totalElements;\r\n    const size = this.page.size ? this.page.size : this.page.numberOfElements;\r\n\r\n    let newStart = this.page.number * size + 1;\r\n\r\n    if (newStart > this.total) {\r\n      this.start = 0;\r\n    } else {\r\n      this.start = newStart;\r\n    }\r\n\r\n    let newEnd = this.page.number * size + this.page.numberOfElements;\r\n\r\n    if (newEnd > this.total) {\r\n      this.end = this.total;\r\n    } else {\r\n      this.end = newEnd;\r\n    }\r\n\r\n    const wasFiltered = this.filtered;\r\n    this.filtered = (this.filter && this.filter.length > 0) || this.tableUtils.hasFilter(this.columns);\r\n\r\n    this.currentPageInfo = this.start + ' - ' + this.end + ' of ' + this.total + (this.filtered ? ' (filtered)' : '');\r\n    const currentPageInfoAria = this.start + ' to ' + this.end + ' of ' + this.total + (this.filtered ? ' (filtered)' : '');\r\n\r\n    if (changes.hasOwnProperty('page') && !changes['page'].isFirstChange()) {\r\n      const pageChange = changes['page'];\r\n      if (pageChange.previousValue.number !== pageChange.currentValue.number) {\r\n        this.notifierService.postMessage('Page changed to ' + (pageChange.currentValue.number + 1) + ' showing ' + currentPageInfoAria);\r\n      } else if (this.filtered || wasFiltered) {\r\n        this.notifierService.postMessage('Filtering changed, showing ' + currentPageInfoAria);\r\n      }\r\n    }\r\n    if (changes.hasOwnProperty('filter')) {\r\n      const filterChange = changes['filter'];\r\n      if (filterChange.previousValue !== filterChange.currentValue) {\r\n        this.notifierService.postMessage('Filtering changed, showing ' + currentPageInfoAria);\r\n      }\r\n    }\r\n  }\r\n\r\n  firePageSizeChange(): void {\r\n    this.filterChange.emit({\r\n      columns: this.columns,\r\n      filter: this.filter,\r\n      localPagingSize: this.localPagingSize\r\n    });\r\n    this.notifierService.postMessage('Page size changed to ' + this.localPagingSize + ', page changed to ' + (this.page.number + 1));\r\n  }\r\n\r\n  changePage(pageNo: number): void {\r\n    this.paginationChange.emit(pageNo);\r\n  }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  selector: 'shark-table-footer',\r\n  template: `\r\n  <div class=\"info-footer\">\r\n    <div class=\"page-size-controls\" *ngIf=\"localPaging && showLocalPagingOptions && columns.length > 0\">\r\n      <label for=\"local-paging-size\" class=\"local-paging-options\">\r\n        Rows per page:\r\n      </label>\r\n      <select [(ngModel)]=\"localPagingSize\" (change)=\"firePageSizeChange()\" name=\"localPagingSize\" id=\"local-paging-size\">\r\n        <option *ngFor=\"let option of localPagingOptions\" [value]=\"option\" [attr.selected]=\"option === localPagingSize ? 'selected' : null\">{{ option }}</option>\r\n      </select>\r\n      <span>{{ currentPageInfo }}</span>\r\n    </div>\r\n    <shark-table-pagination *ngIf=\"columns.length > 0\" [page]=\"page\" (paginationChange)=\"changePage($event)\"></shark-table-pagination>\r\n  </div>`\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SharkTableUtils, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'paginationComponent': [{ type: ViewChild, args: [SharkTablePaginationComponent, ] },],\n'notifierService': [{ type: Input },],\n'localPaging': [{ type: Input },],\n'localPagingSize': [{ type: Input },],\n'localPagingOptions': [{ type: Input },],\n'showLocalPagingOptions': [{ type: Input },],\n'page': [{ type: Input },],\n'columns': [{ type: Input },],\n'filter': [{ type: Input },],\n'filterChange': [{ type: Output },],\n'paginationChange': [{ type: Output },],\n};\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}