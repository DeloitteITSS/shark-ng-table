{"version":3,"sources":["../../src/table.info.header.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAuB,YAAA,EAAc,KAAA,EAAO,MAAA,EAAQ,SAAA,EAAU,MAAO,eAAA,CAAgB;AAC9F,OAAO,EAAE,4BAAA,EAA6B,MAAO,6BAAA,CAA8B;AAM3E;IAAA;QAuCE,iBAAY,GAAG,IAAI,YAAY,EAA2B,CAAC;QAG3D,iBAAY,GAAG,IAAI,YAAY,EAAiB,CAAC;IAoDnD,CAAC;IAlDC,wDAAgB,GAAhB;QACE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;YACrB,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,eAAe,EAAE,IAAI,CAAC,eAAe;SACtC,CAAC,CAAC;IACL,CAAC;IAED,wDAAgB,GAAhB,UAAiB,KAAoB;QACnC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAChC,CAAC;IAEI,wCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,yBAAyB;oBACnC,QAAQ,EAAE,07BAaT;iBACF,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,4CAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACK,4CAAc,GAA2C;QAChE,uBAAuB,EAAE,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,4BAA4B,EAAG,EAAE,EAAE;QACvF,aAAa,EAAE,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,aAAa,EAAG,EAAE,EAAE;QAC9D,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC7B,YAAY,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAChC,cAAc,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAClC,gBAAgB,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QACpC,YAAY,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAChC,iBAAiB,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QACrC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC5B,wBAAwB,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC5C,iBAAiB,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QACrC,iBAAiB,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QACrC,cAAc,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;QACnC,cAAc,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;KAClC,CAAC;IACF,oCAAC;CA9FD,AA8FC,IAAA;SA9FY,6BAA6B","file":"table.info.header.component.js","sourceRoot":"","sourcesContent":["import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\r\nimport { SharkColumnDropdownComponent } from './column-dropdown.component';\r\nimport { SharkColumn } from './column';\r\nimport { SharkHeaderFilterChange } from './table.header.component';\r\nimport { NotifierService } from './notifier/notifier.service';\r\n\r\n\r\nexport class SharkTableInfoHeaderComponent {\r\n\r\n  \r\n  columnPickerComponent: SharkColumnDropdownComponent;\r\n\r\n  \r\n  filterInput: ElementRef;\r\n\r\n  \r\n  columns: SharkColumn[];\r\n\r\n  \r\n  allColumns: SharkColumn[];\r\n\r\n  \r\n  columnPicker: boolean;\r\n\r\n  \r\n  serverSideData: boolean;\r\n\r\n  \r\n  filterable: boolean;\r\n\r\n  \r\n  columnFiltering: boolean;\r\n\r\n  \r\n  filter: string;\r\n\r\n  \r\n  showFilterPlaceholders: boolean;\r\n\r\n  \r\n  localPagingSize: number;\r\n\r\n  \r\n  notifierService: NotifierService;\r\n\r\n  \r\n  filterChange = new EventEmitter<SharkHeaderFilterChange>();\r\n\r\n  \r\n  columnChange = new EventEmitter<SharkColumn[]>();\r\n\r\n  fireFilterChange(): void {\r\n    this.filterChange.emit({\r\n      columns: this.columns,\r\n      filter: this.filter,\r\n      localPagingSize: this.localPagingSize\r\n    });\r\n  }\r\n\r\n  fireColumnChange(event: SharkColumn[]): void {\r\n    this.columnChange.emit(event);\r\n  }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  selector: 'shark-table-info-header',\r\n  template: `\r\n    <div class=\"info-header\">\r\n      <div class=\"controls header-buttons\">\r\n        <button class=\"server-refresh fa fa-sync\" *ngIf=\"serverSideData\" (click)=\"fireFilterChange()\" type=\"button\">\r\n          <span class=\"screen-reader-button-label\">Refresh Server Data</span>\r\n        </button>\r\n        <shark-column-dropdown *ngIf=\"columnPicker\" [columns]=\"allColumns\" [notifierService]=\"notifierService\" (columnChange)=\"fireColumnChange($event)\"></shark-column-dropdown>\r\n        <span class=\"filter-box\" *ngIf=\"filterable && !columnFiltering && columns.length > 0\">\r\n          <label for=\"filter\" class=\"screen-reader\">Filter Results (all column search)</label>\r\n          <input #filterInput type=\"text\" name=\"filter\" id=\"filter\" [(ngModel)]=\"filter\" (ngModelChange)=\"fireFilterChange()\" [attr.placeholder]=\"showFilterPlaceholders ? 'Filter Results' : null\" />\r\n        </span>\r\n      </div>\r\n    </div>\r\n  `\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'columnPickerComponent': [{ type: ViewChild, args: [SharkColumnDropdownComponent, ] },],\n'filterInput': [{ type: ViewChild, args: ['filterInput', ] },],\n'columns': [{ type: Input },],\n'allColumns': [{ type: Input },],\n'columnPicker': [{ type: Input },],\n'serverSideData': [{ type: Input },],\n'filterable': [{ type: Input },],\n'columnFiltering': [{ type: Input },],\n'filter': [{ type: Input },],\n'showFilterPlaceholders': [{ type: Input },],\n'localPagingSize': [{ type: Input },],\n'notifierService': [{ type: Input },],\n'filterChange': [{ type: Output },],\n'columnChange': [{ type: Output },],\n};\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}